class Solution {
    public int minEatingSpeed(int[] piles, int h) {
        int left = 1;
        int right = getMax(piles); // maximum bananas in a pile

        while (left < right) {
            int mid = left + (right - left) / 2;
            int hours = getHours(piles, mid);

            if (hours <= h) {
                right = mid; // try smaller speed
            } else {
                left = mid + 1; // need more speed
            }
        }

        return left; // or right 
    }
    private int getMax(int[] piles) {
        int max = 0;
        for (int pile : piles) {
            max = Math.max(max, pile);
        }
        return max;
    }
    private int getHours(int[] piles, int k) {
        int hours = 0;
        for (int pile : piles) {
            hours += (pile + k - 1) / k; 
        }
        return hours;
    }
}
