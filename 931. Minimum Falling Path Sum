int n = matrix.length;
        int [][] dp = new int[n][n];

        //Base case for first row
        for(int i = 0;i < n;i++){
            dp[0][i] = matrix[0][i];
        }
        //fill the dp
        for(int i = 1; i < n; i++){
            for(int j = 0;j < n; j++){
                int straight = dp[i - 1][j];
                int leftDiag = (j > 0) ? dp[i - 1][j - 1] : Integer.MAX_VALUE;
                int rightDiag = (j < n - 1) ? dp[i - 1][j + 1] : Integer.MAX_VALUE;

                dp[i][j] = matrix[i][j] + Math.min(straight, Math.min(leftDiag, rightDiag));
            }
        }
        int min = Integer.MAX_VALUE;
        for(int j = 0; j < n; j++){
            min = Math.min(min, dp[n -1][j]);
        }
        return min;
